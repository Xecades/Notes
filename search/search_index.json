{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Overview","text":"<p>Here are my notes on various topics. I am trying to keep them as concise as possible, so that I can review them quickly. The notes are written in Markdown (with LaTeX embedded). I am using MkDocs to generate the site.</p> <p>This site is in general for educational purposes in computer science and mathematics. Not trying to show off, but I hope it could help random people on the Internet or myself (when my memory fails me). As a non-native English speaker, I guarantee no perfectness of grammar or expressions, but I will do my best to make them not that strange. If you come across any mistakes, feel free to open an issue or pull request, or simply email me.</p> <p>All content on this site is licensed under CC BY-NC-SA 4.0.</p>"},{"location":"#who-am-i","title":"Who am I?","text":"<p>I am currently an undergraduate student of Zhejiang University, China. You can refer to my personal website (which is written in Chinese) for further information. If you have difficulty reading Chinese, here are some of my profiles:</p> <ul> <li>GitHub: github.com/Xecades</li> <li>Telegram: t.me/Xecades</li> <li>Email: <code>xecadeszhe#gmail.com</code> or <code>i#xecades.xyz</code>* (replace # with @)</li> <li>QQ: Check TXT record of <code>qq.xecades.xyz</code></li> </ul> <p>* Please be aware that certain email providers may block custom domain emails. If you do not receive my response, please check your spam folder.</p>"},{"location":"#why-am-i-using-english","title":"Why am I using English?","text":"<p>(It is said that) English courses are not required for Turing Class. To make up for that, I am considering using English for my notes.</p>"},{"location":"#privacy","title":"Privacy","text":"<p>This site is hosted on GitHub Pages, a static site hosting service. GitHub Pages does collect IP address, but I don't have access to it. I am using Google Analytics to collect visitor statistics. The only two cookies the site generates are from it. If you prefer not to be tracked, you can use an ad blocker to block it. The only third-party plugin enabled globally in this site is MathJax, which helps to render math notations. I have no idea how to harvest data from MathJax. For several pages I enabled Giscus, a GitHub-based comment system. You can refer to Giscus Privacy Policy for more information. If you have any other concerns, you can review the source code on GitHub.</p>"},{"location":"cs/basis/manuals-standards/","title":"Manuals and Standards","text":""},{"location":"cs/basis/manuals-standards/#rfc-2119","title":"RFC 2119","text":"<p>Refer to: RFC 2119.</p> <p>RFC 2119 specifies keywords that are used to help in the interpretation of requirements:</p> <ol> <li>MUST / REQUIRED / SHALL</li> <li>MUST NOT / SHALL NOT</li> <li>SHOULD / RECOMMENDED</li> <li>SHOULD NOT / NOT RECOMMENDED</li> <li>MAY / OPTIONAL</li> </ol>"},{"location":"cs/basis/manuals-standards/#licensing","title":"Licensing","text":"<p>Refer to: Choose a License / Creative Commons / Open Source Initiative.</p>"},{"location":"cs/basis/manuals-standards/#semantic-versioning","title":"Semantic Versioning","text":"<p>Refer to: Semantic Versioning.</p> <p>Given a version number <code>MAJOR.MINOR.PATCH</code>, increment the:</p> <ul> <li><code>MAJOR</code> version when you make incompatible API changes.</li> <li><code>MINOR</code> version when you add functionality in a backward compatible manner.</li> <li><code>PATCH</code> version when you make backward compatible bug fixes.</li> </ul>"},{"location":"cs/basis/manuals-standards/#conventional-commits","title":"Conventional Commits","text":"<p>Refer to: Conventional Commits / Angular Convention.</p> <p>Structure of the commit message:</p> <pre><code>&lt;type&gt;[optional scope]: &lt;description&gt;\n\n[optional body]\n\n[optional footer(s)]\n</code></pre> <ul> <li><code>fix</code>: correlates with <code>PATCH</code> in SemVer.</li> <li><code>feat</code>: correlates with <code>MINOR</code> in SemVer.</li> <li><code>BREAKING CHANGE</code>: a commit that has a footer <code>BREAKING CHANGE</code>, or appends a <code>!</code> after the type/scope, correlating with <code>MAJOR</code> in SemVer.</li> <li><code>&lt;type&gt;</code>: <code>build</code>, <code>chore</code>, <code>ci</code>, <code>docs</code>, <code>style</code>, <code>refactor</code>, <code>perf</code>, <code>test</code>, etc.</li> <li><code>&lt;description&gt;</code>:<ul> <li>use the imperative, present tense: \"change\" not \"changed\" nor \"changes\".</li> <li>don't capitalize the first letter.</li> <li>no dot (<code>.</code>) at the end.</li> </ul> </li> </ul> <p>Example:</p> <pre><code>chore!: drop support for Node 6\n\nBREAKING CHANGE: use JavaScript features not available in Node 6.\n</code></pre>"},{"location":"cs/basis/mit-missing-semester/","title":"MIT Missing Semester","text":"<p>MIT Missing Semester is a course that teaches the un-taught parts of computer science.</p> <p>Classes teach you all about advanced topics within CS, from operating systems to machine learning, but there\u2019s one critical subject that\u2019s rarely covered, and is instead left to students to figure out on their own: proficiency with their tools. We\u2019ll teach you how to master the command-line, use a powerful text editor, use fancy features of version control systems, and much more!</p> <p>\u2014\u2014MIT Missing Semester</p> <p>Under Construction</p>"},{"location":"cs/c-cpp/c-language-cheatsheet/","title":"C Language Cheatsheet","text":""},{"location":"cs/c-cpp/c-language-cheatsheet/#operator-precedence","title":"Operator Precedence","text":"<p>Refer to cppreference.</p>"},{"location":"cs/c-cpp/c-language-cheatsheet/#format-string","title":"Format String","text":"<p>The syntax of a format placeholder is</p> <pre><code>%[parameter][flags][width][.precision][length]type\n</code></pre> <p>* Square brackets indicate optional parts of the placeholder.</p>"},{"location":"cs/c-cpp/c-language-cheatsheet/#type","title":"Type","text":"Type Description <code>%</code> Prints <code>%</code>. <code>d</code> Decimal <code>signed int</code>. <code>u</code> Decimal <code>unsigned int</code>. <code>o</code> Octal <code>unsigned int</code>. <code>x</code>, <code>X</code> Hexadecimal <code>unsigned int</code>. <code>x</code> for lower-case and <code>X</code> for upper-case. <code>f</code> Float-point types in fixed-point notation. <code>e</code>, <code>E</code> Float-point types in exponential notation: <code>d.ddde\u00b1dd</code>. <code>e</code> for lower-case \"e\" and <code>E</code> for upper-case. <code>g</code>, <code>G</code> Float-point types in either fixed-point or exponential notation, whichever is more appropriate for its magnitude. <code>g</code> for lower-case and <code>G</code> for upper-case. <code>a</code>, <code>A</code> Float-point in hexadecimal notation, starting with <code>0x</code> or <code>0X</code>. <code>a</code> for lower-case and <code>A</code> for upper-case. <code>s</code> <code>null</code>-terminated string. <code>c</code> <code>char</code>. <code>p</code> <code>void*</code> in an implementation-defined format. <code>n</code> Print nothing, but writes the number of characters written so far into an integer pointer parameter. <p>Examples:</p> <pre><code>printf(\"%%\");                // %\nprintf(\"%d\", 123);           // 123\nprintf(\"%d\", -123);          // -123\nprintf(\"%u\", 123);           // 123\nprintf(\"%u\", -123);          // 4294967173\nprintf(\"%o\", 123);           // 173\nprintf(\"%x\", 123);           // 7b\nprintf(\"%X\", 123);           // 7B\nprintf(\"%f\", 123.456);       // 123.456000\nprintf(\"%e\", 123.456);       // 1.234560e+02\nprintf(\"%E\", 123.456);       // 1.234560E+02\nprintf(\"%g\", 123.456);       // 123.456\nprintf(\"%G\", 123.456);       // 123.456\nprintf(\"%g\", 123456789.123); // 1.23457e+08\nprintf(\"%G\", 123456789.123); // 1.23457E+08\nprintf(\"%a\", 123.456);       // 0x1.edd2f1a9fbe77p+6\nprintf(\"%A\", 123.456);       // 0X1.EDD2F1A9FBE77P+6\nprintf(\"%s\", \"Hello\");       // Hello\nprintf(\"%c\", 'H');           // H\nint a = 123;\nprintf(\"%p\", &amp;a);            // 0x16d79b3d8\nint n;\nprintf(\"Hello%n\", &amp;n);       // Hello\nprintf(\"%d\", n);             // 5\n</code></pre>"},{"location":"cs/c-cpp/c-language-cheatsheet/#others","title":"Others","text":"<p>For further information, refer to Wikipedia.</p> <p>Here are some common examples:</p> <pre><code>printf(\"[%5d]\", 123);         // [  123]\nprintf(\"[%-5d]\", 123);        // [123  ]\nprintf(\"[%05d]\", 123);        // [00123]\nprintf(\"[%+5d]\", 123);        // [ +123]\nprintf(\"[%*d]\", 5, 123);      // [  123] (dynamic width)\nprintf(\"[%.1f]\", 123.456);    // [123.5]\nprintf(\"[%10f]\", 123.456);    // [123.456000] (10 characters in total)\nprintf(\"[%10.5f]\", 123.456);  // [ 123.45600] (5 precision, 10 characters)\nprintf(\"[%010.5f]\", 123.456); // [0123.45600] (5 precision, 10 characters)\n</code></pre>"},{"location":"cs/sys/csapp/","title":"CSAPP Notes","text":"<p>CSAPP stands for Computer Systems: A Programmer's Perspective.</p> <p>Be aware that the notes here are not linearly organized. And this should not be a substitute for the book.</p>"},{"location":"cs/sys/csapp/#12-programs-are-translated-by-other-programs-into-different-forms","title":"1.2 Programs Are Translated by Other Programs into Different Forms","text":""},{"location":"cs/sys/csapp/#compilation-system","title":"Compilation System","text":"<p>For a typical C program <code>hello.c</code>:</p> <pre><code>#include&lt;stdio.h&gt;\nint main() {\nprintf(\"hello, world\\n\");\nreturn 0;\n}\n</code></pre> <p>When running</p> <pre><code>gcc -o hello hello.c\n</code></pre> <p>Four phases are performed:</p> <p></p> <ul> <li>Preprocessing phase: The preprocessor (<code>cpp</code>) turns <code>hello.c</code> to <code>hello.i</code>. The result <code>hello.i</code> is also a C program. In this phase, <code>#include&lt;stdio.h&gt;</code> is replaced by the content of <code>stdio.h</code>.</li> <li>Compilation phase: The compiler (<code>cc1</code>) translates text file <code>hello.i</code> into text file <code>hello.s</code>, which contains an assembly-language program.</li> <li>Assembly phase: The assembler (<code>as</code>) translates <code>hello.s</code> into machine-language instructions, packages them in a form known as a relocatable object program, and stores the result in the object file <code>hello.o</code>.</li> <li>Linking phase. Take <code>printf</code> function for example. The <code>printf</code> function resides in a separate precompiled object file called <code>printf.o</code>, which must be merged with <code>hello.o</code>. The linker (<code>ld</code>) handles this merging. The result is the executable object file <code>hello</code>.</li> </ul>"},{"location":"cs/sys/csapp/#14-processors-read-and-interpret-instructions-stored-in-memory","title":"1.4 Processors Read and Interpret Instructions Stored in Memory","text":""},{"location":"cs/sys/csapp/#hardware-organization-of-a-system","title":"Hardware Organization of a System","text":"<ul> <li>Word: The natural unit of access for a processor. A word is typically 4 bytes or 8 bytes long. A bus transfers a word at a time.</li> <li>I/O Devices :: Controller / Adapter: Controllers are chip set in the device itself or on the motherboard. An adapter is a card that plugs into a slot on the motherboard.</li> <li>CPU :: PC / ALU: PC stands for program counter, ALU stands for arithmetic/logic unit.</li> </ul>"},{"location":"cs/sys/csapp/#16-storage-devices-form-a-hierarchy","title":"1.6 Storage Devices Form a Hierarchy","text":"<p>This notion of inserting a smaller, faster storage device (e.g., cache memory) between the processor and a larger, slower device (e.g., main memory) turns out to be a general idea.</p> <p>Memory hierarchy:</p> <p></p>"},{"location":"cs/sys/csapp/#17-the-operating-system-manages-the-hardware","title":"1.7 The Operating System Manages the Hardware","text":"<p>The operating system manages the hardware by providing abstractions for the hardware resources.</p> <p></p> <ul> <li>File: I/O devices.</li> <li>Virtual memory: Main memory and I/O devices.</li> <li>Processes: The processor, main memory, and I/O devices.</li> </ul>"},{"location":"cs/sys/csapp/#processes","title":"Processes","text":"<p>When a program such as <code>hello</code> runs on a modern system, the operating system provides the illusion that the program is the only one running on the system. The program appears to have exclusive use of both the processor, main memory, and I/O devices. The processor appears to execute the instructions in the program, one after the other, without interruption. And the code and data of the program appear to be the only objects in the system\u2019s memory. These illusions are provided by the notion of a process, one of the most important and successful ideas in computer science.</p> <p>Multiple processes run concurrently on a system.</p> <p>Kernel: The kernel is the portion of the operating system code that is always resident in memory. When an application program requires some action by the operating system, such as to read or write a file, it executes a special system call instruction, transferring control to the kernel. The kernel then performs the requested operation and returns to the application program.</p>"},{"location":"cs/sys/csapp/#threads","title":"Threads","text":"<p>Multiple threads run concurrently within a process.</p> <p>They share the same code and global data.</p>"},{"location":"cs/sys/csapp/#virtual-memory","title":"Virtual Memory","text":"<p>An abstraction that provides each process with the illusion that it has exclusive use of the main memory.</p>"},{"location":"cs/sys/csapp/#files","title":"Files","text":"<p>Every I/O device, e.g., disks, keyboards, and monitors, is modeled as a file.</p>"},{"location":"cs/sys/csapp/#19-important-themes","title":"1.9 Important Themes","text":""},{"location":"cs/sys/csapp/#amdahls-law","title":"Amdahl's Law","text":"<p>Consider a system in which executing some application requires time \\(T_{\\text{old}}\\). Suppose some part of the system requires a fraction \\(\\alpha\\) of this time, and that we improve its performance by a factor of \\(k\\). The overall execution time would thus be</p> \\[ \\begin{aligned} T_{\\text{new}}=&amp;(1-\\alpha)T_{\\text{old}} + \\alpha T_{\\text{old}}/k\\\\ =&amp;T_{\\text{old}}[(1-\\alpha) + \\alpha/k] \\end{aligned} \\] <p>The speedup \\(S = T_{\\text{old}} / T_{\\text{new}}\\) is</p> \\[S=\\frac{1}{(1-\\alpha) + \\alpha/k}\\] <p>Suppose we significantly improved a part that takes \\(60%\\) of the time by a factor of \\(3\\). The speedup is only \\(1.67\\times\\). The overall improvement is not as good as we expected.</p> <p>Furthermore, suppose we are able to take some part of the system and speed it up to the point at which it takes a negligible amount of time. That is, we set \\(k\\) to \\(\\infty\\). The speedup is</p> \\[S_\\infty=\\frac{1}{1-\\alpha}\\] <p>When we set \\(\\alpha\\) to \\(60\\%\\), the speedup is only \\(2.5\\times\\).</p> <p>Conclude: To significantly improve the overall performance of a system, we must improve the speed of a very large fraction of the system.</p>"},{"location":"math/la/what-is/","title":"What is...","text":"<p>Here are some easy-to-forget terms in linear algebra. Check whether you are familiar with them all.</p>"},{"location":"math/la/what-is/#set","title":"Set","text":"<ol> <li>Power set, or \\(P(A)\\) and \\(2^A\\) for a set \\(A\\).</li> </ol>"},{"location":"math/la/what-is/#group-and-field","title":"Group and Field","text":"<ol> <li>Semigroup.</li> <li>Monoid.</li> <li>Group, or \\(\\langle G:\\circ\\rangle\\).</li> <li>Abelian group.</li> <li>Field, or \\(\\langle F:+, \\circ\\rangle\\).</li> </ol>"},{"location":"math/la/what-is/#vector-space","title":"Vector Space","text":"<ol> <li>Dimension, or \\(\\dim V\\).</li> <li>Rank, or \\(\\operatorname{rank} A\\).</li> <li>For \\(W_1, W_2\\leq V(F)\\), what is \\(W_1+W_2\\), \\(W_1\\oplus W_2\\).</li> <li>Inner product space.</li> <li>Euclidean space.</li> <li>Schmidt orthonormalization.</li> </ol>"},{"location":"math/ma/completeness-of-real-numbers/","title":"Completeness of the Real Numbers","text":""},{"location":"math/ma/completeness-of-real-numbers/#least-upper-bound-property","title":"Least upper bound property","text":"<p>Every nonempty subset of \\(\\mathbb{R}\\) having an upper bound has a least upper bound.</p>"},{"location":"math/ma/completeness-of-real-numbers/#monotone-convergence-theorem","title":"Monotone convergence theorem","text":"<p>If a sequence of \\(\\mathbb{R}\\) is monotone and bounded, then it converges.</p>"},{"location":"math/ma/completeness-of-real-numbers/#nested-interval-theorem","title":"Nested interval theorem","text":"<p>For a sequence of closed intervals \\(\\{[a_n,b_n]\\}\\), if \\([a_{n+1},b_{n+1}]\\subset[a_n,b_n]\\) for all \\(n\\in\\mathbb{N}^\\star\\) and \\(\\lim\\limits_{n\\to\\infty}{|a_n-b_n|}=0\\), then exists exactly one \\(\\xi\\in\\mathbb{R}\\) so that \\(\\xi\\in[a_n,b_n]\\) for all \\(n\\in\\mathbb{N}^\\star\\).</p>"},{"location":"math/ma/completeness-of-real-numbers/#bolzano-weierstrass-theorem","title":"Bolzano-Weierstrass theorem","text":"<p>Every bounded sequence of \\(\\mathbb{R}\\) has a convergent subsequence.</p>"},{"location":"math/ma/completeness-of-real-numbers/#cauchy-criterion","title":"Cauchy criterion","text":"<p>A sequence of \\(\\mathbb{R}\\) is convergent if and only if it is a fundamental sequence.</p> <p>Fundamental sequence: A sequence \\(\\{x_n\\}\\) is called a fundamental sequence if for all \\(\\varepsilon &gt; 0\\), exists \\(N\\in\\mathbb{N}^\\star\\) so that \\(|x_{n+p} - x_n| &lt; \\varepsilon\\) for all \\(n&gt;N\\) and \\(p\\in\\mathbb{N}^\\star\\). Fundamental sequence is also known as Cauchy sequence.</p>"},{"location":"math/ma/completeness-of-real-numbers/#heine-borel-theorem","title":"Heine-Borel theorem","text":"<p>If \\(H\\) is an infinite open cover of closed interval \\([a, b]\\), then exists a finite subset \\(H_0\\subset H\\) so that \\(H_0\\) is an open cover of \\([a,b]\\).</p> <p>Or: If \\(H = \\{(a_\\alpha, b_\\alpha) | \\alpha \\in \\Lambda\\}\\) which satisfies \\(\\bigcup\\limits_{\\alpha\\in\\Lambda}{(a_\\alpha, b_\\alpha)} \\supset [a, b]\\), then exists a finite subset \\(H_0\\subset H\\) so that \\(\\bigcup\\limits_{(a_\\alpha, b_\\alpha)\\in H_0}{(a_\\alpha, b_\\alpha)} \\supset [a, b]\\).</p>"},{"location":"math/ma/prove-that/","title":"Prove That...","text":"<p>Here are theorems and proofs that are essential in mathematical analysis. It would be nice if you could prove them smoothly.</p>"},{"location":"math/ma/prove-that/#set","title":"Set","text":"<ol> <li>(De Morgan's laws)<ul> <li>\\((A \\cup B)^C = A^C \\cap B^C\\)</li> <li>\\((A \\cap B)^C = A^C \\cup B^C\\)</li> </ul> </li> <li>Any countable union of countable sets is a countable set.</li> </ol>"},{"location":"math/ma/prove-that/#limit-of-a-sequence","title":"Limit of a sequence","text":"<ol> <li>Prove with definition: \\(\\lim\\limits_{n\\to\\infty}{\\sqrt[n]{n}} = 1\\).</li> <li>If \\(\\lim\\limits_{n\\to\\infty}{a_n} = a\\), then \\(\\lim\\limits_{n\\to\\infty}{\\dfrac{a_1+a_2+\\cdots+a_n}{n}} = a\\).</li> <li>For convergent sequences \\(\\{x_n\\}\\) and \\(\\{y_n\\}\\), if \\(\\lim\\limits_{n\\to\\infty}x_n=a\\), \\(\\lim\\limits_{n\\to\\infty}y_n=b\\), and \\(a&lt;b\\), then exists \\(N\\in\\mathbb{N}^\\star\\) so that \\(x_n&lt;y_n\\) for all \\(n&gt;N\\).</li> <li>If \\(\\lim\\limits_{n\\to\\infty}x_n=a\\), \\(\\lim\\limits_{n\\to\\infty}y_n=b\\neq0\\), then \\(\\lim\\limits_{n\\to\\infty}\\dfrac{x_n}{y_n}=\\dfrac{a}{b}\\).</li> <li>\\(a_n = \\left(1 + \\dfrac{1}{n}\\right)^n\\) and \\(b_n = \\left(1 + \\dfrac{1}{n}\\right)^{n + 1}\\) converges to \\(e\\).</li> <li>\\(a_n = 1 + \\dfrac{1}{1!} + \\dfrac{1}{2!} + \\cdots + \\dfrac{1}{n!}\\) converges to \\(e\\).</li> <li>\\(a_n = 1 + \\dfrac{1}{2} + \\dfrac{1}{3} + \\cdots + \\dfrac{1}{n} - \\ln n\\) converges to \\(\\gamma\\).</li> <li>\\(\\lim\\limits_{n\\to\\infty}a_n=A\\iff\\lim\\limits_{n\\to\\infty}a_{2n-1}=\\lim\\limits_{n\\to\\infty}a_{2n}=A\\).</li> <li>\\(\\{a_n\\}\\) is convergent \\(\\iff\\) every non-trivial subsequence \\(\\{a_{n_k}\\}\\) of \\(\\{a_n\\}\\) converges.</li> <li>\\(a_n = \\sin n\\) is divergent.</li> <li>Prove with Nested interval theorem: \\(\\mathbb{R}\\) is uncountable.</li> <li>Refer to Completeness of the Real Numbers, and prove<ol> <li>Least upper bound \\(\\Rightarrow\\) Monotone convergence.</li> <li>Monotone convergence \\(\\Rightarrow\\) Nested interval.</li> <li>Nested interval \\(\\Rightarrow\\) Bolzano-Weierstrass.</li> <li>Bolzano-Weierstrass \\(\\Rightarrow\\) Cauchy criterion.</li> <li>Cauchy criterion \\(\\Rightarrow\\) Least upper bound.</li> <li>Cauchy criterion \\(\\Rightarrow\\) Nested interval.</li> <li>Nested interval \\(\\Rightarrow\\) Least upper bound.</li> </ol> </li> </ol>"},{"location":"math/ma/prove-that/#limit-of-a-function","title":"Limit of a function","text":"<ol> <li>If \\(\\lim\\limits_{x\\to a}f(x)=A\\), \\(\\lim\\limits_{x\\to a}g(x)=B\\) and \\(A&gt;B\\), then exists \\(\\delta&gt;0\\) so that \\(f(x)&gt;g(x)\\) for all \\(x\\in\\mathring{U}(x_0, \\delta)\\).</li> <li>If \\(\\lim\\limits_{x\\to x_0}f(x)=A\\), then exists \\(\\delta&gt;0\\) so that \\(f(x)\\) is bounded in \\(\\mathring{U}(x_0, \\delta)\\).</li> <li>Prove with definition: \\(\\lim\\limits_{x\\to0}\\dfrac{\\sin x}{x} = 1\\).</li> <li>(Heine's theorem) The necessary and sufficient condition for \\(\\lim\\limits_{x\\to a}f(x)=A\\) is that for all sequences \\(\\{x_n\\}\\) which converges to \\(a\\) and \\(x_n\\neq a\\), \\(\\lim\\limits_{n\\to\\infty}f(x_n)=A\\).</li> <li>Prove with Heine's theorem: \\(f(x)=\\sin\\dfrac{1}{x}\\) has no limit as \\(x\\to0\\).</li> <li>(Cauchy criterion) Prove with Heine's theorem: \\(\\lim\\limits_{x\\to a}f(x)\\) exists if and only if for all \\(\\varepsilon&gt;0\\), exists \\(\\delta&gt;0\\) so that \\(|f(x)-f(y)|&lt;\\varepsilon\\) for all \\(x,y\\in\\mathring{U}(x_0, \\delta)\\).</li> <li>Prove with definition: \\(\\lim\\limits_{x\\to\\infty}\\left(1+\\dfrac{1}{x}\\right)^x=e\\).</li> </ol>"},{"location":"math/ma/prove-that/#continuity","title":"Continuity","text":"<ol> <li>Every irrational point of \\(R(x)\\) is continuous, every rational point of \\(R(x)\\) is removable discontinuous, where \\[R(x)=\\left\\{\\begin{align}\\frac{1}{q}&amp;\\quad \\text{if}\\ x=\\frac{p}{q}\\text{, with}\\ p\\in\\mathbb{Z}\\ \\text{and}\\ q\\in\\mathbb{N}\\ \\text{coprime.}\\\\0&amp;\\quad \\text{if}\\ x\\ \\text{is irrational.}\\end{align}\\right.\\] </li> <li>If \\(u=g(x)\\) is continuous at \\(x_0\\), and \\(y=f(u)\\) is continuous at \\(u_0=g(x_0)\\), then \\(f\\circ g(x)=f(g(x))\\) is continuous at \\(x_0\\).</li> <li>If \\(f(x)\\) is continuous in closed interval \\([a, b]\\),<ol> <li>then it is bounded in \\([a, b]\\).</li> <li>then \\(\\max f(x)\\) and \\(\\min f(x)\\) exists in \\([a, b]\\).</li> <li>and \\(f(a)\\cdot f(b)&lt;0\\), then exists \\(\\xi\\in(a, b)\\) so that \\(f(\\xi)=0\\).</li> <li>then it can reach all values between \\(\\min f(x)\\) and \\(\\max f(x)\\).</li> <li>(Cantor's theorem) then it is uniformly continuous in \\([a, b]\\).</li> </ol> </li> <li>The sufficient and necessary condition for \\(f(x)\\) to be uniformly continuous in \\(D\\) is that for all sequences \\(\\{x_n\\}, \\{y_n\\}\\in D^\\mathbb{N}\\) that satisfies \\(\\lim\\limits_{n\\to\\infty}(x_n-y_n)=0\\), \\(\\lim\\limits_{n\\to\\infty}(f(x_n)-f(y_n))=0\\).</li> <li>If \\(f(x)\\) is continuous in finite open interval \\((a, b)\\), then \\(f(x)\\) is uniformly continuous on \\((a, b)\\) if and only if \\(\\lim\\limits_{x\\to a^+}f(x)\\) and \\(\\lim\\limits_{x\\to b^-}f(x)\\) exist.</li> </ol>"},{"location":"others/learning-plan/","title":"Learning Plan","text":"<p>A comment system is enabled in this page, leave your comments below if you have any suggestions.</p>"},{"location":"others/learning-plan/#basis","title":"Basis","text":""},{"location":"others/learning-plan/#general","title":"General","text":"<ul> <li>Computer Systems: A Programmer's Perspective, or CSAPP for short.</li> </ul>"},{"location":"others/learning-plan/#network","title":"Network","text":"<ul> <li>To-do.</li> </ul>"},{"location":"others/learning-plan/#operating-system","title":"Operating System","text":"<ul> <li>To-do.</li> </ul>"},{"location":"others/learning-plan/#languages","title":"Languages","text":"<p>Several languages that I am interested in.</p>"},{"location":"others/learning-plan/#c-c","title":"C &amp; C++","text":"<ul> <li>To-do.</li> </ul>"},{"location":"others/learning-plan/#python","title":"Python","text":"<ul> <li>To-do.</li> </ul>"},{"location":"others/learning-plan/#haskell","title":"Haskell","text":"<ul> <li>To-do.</li> </ul>"},{"location":"others/learning-plan/#javascript","title":"JavaScript","text":"<ul> <li>To-do.</li> </ul>"},{"location":"others/learning-plan/#go","title":"Go","text":"<ul> <li>To-do.</li> </ul>"},{"location":"others/learning-plan/#read-source-code","title":"Read source code","text":"<ul> <li>hexo: @hexojs :: hexo</li> <li>manim: @3b1b :: manim</li> </ul>"},{"location":"others/learning-plan/#tools-skills","title":"Tools &amp; Skills","text":"<ul> <li>Typing.</li> <li>LaTeX.</li> <li>Vim.</li> <li>Docker.</li> <li>CMake.</li> <li>Regex.</li> <li>MatLab.</li> </ul>"},{"location":"others/macOS-command-collection/","title":"macOS Command Collection","text":"<p>Here is a collection of useful command-line tools for macOS.</p>"},{"location":"others/macOS-command-collection/#general","title":"General","text":"<ul> <li><code>eza</code>: Modern replacement for <code>ls</code>.</li> <li><code>bat</code>: Modern replacement for <code>cat</code>.</li> <li><code>fd</code>: Modern replacement for <code>find</code>.</li> <li><code>lazygit</code>: Terminal UI for <code>git</code>.</li> <li><code>nvim</code>: Neovim, modern replacement for <code>vim</code>.</li> <li><code>lvim</code>: Out-of-the-box Neovim config.</li> <li><code>tldr</code>: abbr. Too Long, Don't Read. Simplify the man page.</li> <li><code>j</code>: Jump to a directory. A zsh plugin.</li> <li><code>trans</code>: Translate text into Chinese in the terminal. <code>trans :en</code>, translate into English.</li> <li><code>nnn</code>: File manager.</li> <li><code>br</code>: Broot, a tree-view file manager.</li> <li><code>tree</code>: Show directory structure.</li> <li><code>pbcopy</code> / <code>pbpaste</code>: Copy / paste to / from clipboard. Built-in command.</li> </ul>"},{"location":"others/macOS-command-collection/#productivity","title":"Productivity","text":"<ul> <li><code>ffmpeg</code>: Video and audio converter.</li> </ul>"},{"location":"others/macOS-command-collection/#ctf","title":"CTF","text":"<ul> <li><code>binwalk</code>: Analyze binary files for embedded files and executable code.</li> <li><code>foremost</code>: Recover files using their headers, footers and data structures.</li> <li><code>hashcat</code>: Password recovery tool.</li> <li><code>zip2hash</code>: Part of John the Ripper. Converts a zip file to a hash.</li> <li><code>ciphey</code>: Automated decryption tool.</li> <li><code>hexyl</code>: Command-line Hex viewer.</li> <li><code>nmap</code>: Port scanner.</li> <li><code>StegSolve.jar</code>: Steganography solver.</li> <li><code>exiftool</code>: Read and write meta information in files.</li> <li><code>zsteg</code>: Steganography detection for PNG and BMP file formats.</li> </ul>"},{"location":"others/macOS-command-collection/#miscellaneous","title":"Miscellaneous","text":"<ul> <li><code>lolcat</code>: Colorful <code>cat</code>.</li> <li><code>cowsay</code> / <code>cowthink</code>: Configurable speaking / thinking cow.</li> <li><code>fortune</code>: Fortune cookie.</li> <li><code>neofetch</code>: Show system info.</li> <li><code>nyancat</code>: Nyan cat in the terminal.</li> </ul>"},{"location":"others/things-i-should-do/","title":"Things I Should Do Before I Die","text":"<p>Every man dies. Not every man really lives.</p> <p>--William Wallace</p> <p>Aka. Bucket list. Content will be updated from time to time.</p> <ul> <li> Photography.</li> <li> Badminton.</li> <li> Astronomy.</li> <li> Psychology.</li> <li> Skydive.</li> <li> Scuba dive.</li> <li> Learn to swim.</li> <li> Fall in love.</li> <li> Horseback riding.</li> <li> Climb a mountain.</li> <li> Travel around the world.</li> <li> Achieve mastery in my field.</li> <li> Make a difference in one's life.</li> <li> Learn to play a musical instrument.</li> <li> See the northern lights.</li> <li> Further my education abroad.</li> <li> Befriend a foreigner.</li> <li> Get a pet.</li> <li> Volunteer.</li> <li> Go on a balloon ride.</li> </ul>"}]}